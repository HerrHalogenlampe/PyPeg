---------------

python -m coverage run  `which py.test`
python -m coverage html


NEUE METHODE: rungrammar (erstellt dateien wie in hello_call.lua und führt die aus, fischt richtige bytecodes raus) (nope)
bytecodes call, jmp, ret (DONE)



probleme diese woche:
tests die bestimmte bytecodes erzeugen zu finden ist schwer (-> testany),
das vorgesehene verhalten für undokumentierte bytecodes zu finden (wie "fullcapture simple") ist schwer


(bonus: capture)

code refactorn

IEnd: done
IGiveup
IRet done
IAny done
ITestAny 
IChar done
ITestChar done
ISet done
ITestSet done
IBehind ?
ISpan: done
IJmp done
IChoice: done
ICall done
ICommit: done
IPartialCommit: done
IBackCommit?
IFailTwice
IFail 
ICloseRunTime?
ICloseCapture?
IOpenCapture?
IFullCapture?



